/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define HYP(key) LS(LC(LA(LG(key))))

#define HYPER    LS(LC(LA(LGUI)))
#define MACLOCK  LG(LC(Q))

/ {
    behaviors {
        #include "macros.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <30 32>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE  &kp N1  &kp N2       &kp N3      &kp N4      &kp N5  &none                                                                             &mo 3      &kp N6  &kp N7      &kp N8       &kp N9       &kp N0    &kp BACKSPACE
&kp TAB    &kp Q   &kp W        &kp E       &kp R       &kp T   &none                                                                             &none      &kp Y   &kp U       &kp I        &kp O        &kp P     &kp BSLH
&kp LCTRL  &kp A   &mt LCTRL S  &mt LALT D  &mt LCMD F  &kp G   &none        &none           &kp MACLOCK  &none  &none  &kp C_VOL_UP  &kp C_MUTE  &none      &kp H   &mt RCMD J  &mt RALT K   &mt RCTRL L  &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X        &lt 1 C     &kp V       &kp B   &none        &none           &key_repeat  &none  &none  &kp C_VOL_DN  &none       &none      &kp N   &kp M       &lt 1 COMMA  &kp DOT      &kp FSLH  &kp RSHFT
&none      &none   &kp CAPS     &kp LALT    &kp LCMD            &lt 2 SPACE  &kp LEFT_SHIFT  &kp ENTER                  &none         &kp ENTER   &kp SPACE          &kp MINUS   &kp EQUAL    &kp LBKT     &kp RBKT  &none
            >;
        };

        layer_fn_sim {
            bindings = <
&none  &none   &none   &none   &none    &none    &none                                            &none  &none      &none          &none             &none              &none  &none
&none  &kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &none                                            &none  &kp UNDER  &kp EQUAL      &kp LPAR          &kp RPAR           &none  &none
&none  &kp F6  &kp F7  &kp F8  &kp F9   &kp F10  &none  &none  &none  &none  &none  &none  &none  &none  &kp MINUS  &kp PLUS       &kp LEFT_BRACE    &kp RIGHT_BRACE    &none  &none
&none  &none   &none   &none   &kp F11  &kp F12  &none  &none  &none  &none  &none  &none  &none  &none  &none      &kp BACKSPACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &none  &none
&none  &none   &none   &none   &none             &none  &none  &none                &none  &none  &none             &none          &none             &none              &none  &none
            >;
        };

        layer-hyper {
            bindings = <
&none  &none                  &none                  &none                  &none                  &none                  &none                                            &none  &none  &none  &none  &none  &none  &none
&none  &none                  &none                  &none                  &none                  &none                  &none                                            &none  &none  &none  &none  &none  &none  &none
&none  &kp LS(LG(LC(LA(A))))  &kp LS(LC(LA(LG(S))))  &kp LS(LA(LC(LG(D))))  &kp LS(LA(LC(LG(F))))  &kp LS(LA(LC(LG(G))))  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none                  &none                  &none                  &none                  &kp LS(LA(LC(LG(V))))  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none                  &none                  &none                  &none                                         &none  &none  &none                &none  &none  &none         &none  &none  &none  &none  &none
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                                            &trans                  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none
&none  &none         &none         &none         &none         &none         &bootloader                                                                      &bootloader             &none         &none         &none         &none         &none         &none
&none  &none         &none         &none         &none         &none         &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR  &none  &none  &none  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5  &none         &none         &none         &none         &none         &none
&none  &none         &none         &none         &none         &none         &none                   &none       &none  &none  &none  &none       &none       &none                   &none         &none         &none         &none         &none         &none
&none  &none         &none         &bl BL_INC    &bl BL_DEC                  &rgb_ug RGB_TOG         &bl BL_TOG  &none                &none       &bl BL_TOG  &rgb_ug RGB_TOG                       &bl BL_INC    &bl BL_DEC    &none         &none         &none
            >;
        };
    };
};
