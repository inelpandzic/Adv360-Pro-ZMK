/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define HYP(key) LS(LC(LA(LG(key))))

#define HYPER    LS(LC(LA(LGUI)))
#define MACLOCK  LG(LC(Q))

/ {
    behaviors {
        #include "macros.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <30 32>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <16 18>;
        };

        find {
            bindings = <&copypastefind>;
            key-positions = <50 52>;
        };
    };

    macros {
        copypastefind: copypastefind {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(C) &kp LG(F) &kp LG(A) &kp LG(V)>;
            label = "COPYPASTEFIND";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE  &mt EXCLAMATION N1  &mt AT_SIGN N2  &mt HASH N3  &mt DOLLAR N4  &mt PERCENT N5  &none                                                              &mo 4      &mt CARET N6  &mt AMPERSAND N7  &mt ASTERISK N8  &kp N9       &kp N0    &kp BACKSPACE
&kp TAB    &kp Q               &kp W           &kp E        &lt 3 R        &kp T           &none                                                              &none      &kp Y         &lt 3 U           &kp I            &kp O        &kp P     &kp BSLH
&kp LCTRL  &kp A               &hm LCTRL S     &hm LALT D   &hm LCMD F     &kp G           &none  &none  &kp MACLOCK  &none  &none  &kp C_VOL_UP  &kp C_MUTE  &none      &kp H         &hm LCMD J        &hm LALT K       &hm RCTRL L  &kp SEMI  &kp SQT
&kp LSHFT  &kp Z               &kp X           &kp C        &kp V          &kp B           &none  &none  &key_repeat  &none  &none  &kp C_VOL_DN  &none       &none      &kp N         &kp M             &kp COMMA        &kp DOT      &kp FSLH  &kp RSHFT
&none      &none               &none           &none        &none                          &mo 1  &mo 2  &kp ENTER                  &none         &kp ENTER   &kp SPACE                &none             &none            &none        &none     &none
            >;
        };

        layer-shortcuts {
            bindings = <
&none  &mt LG(NUMBER_1) LC(NUMBER_1)  &mt LG(NUMBER_2) LC(NUMBER_2)  &mt LG(NUMBER_3) LC(NUMBER_3)  &mt LG(NUMBER_4) LC(NUMBER_4)  &mt LG(N5) LC(N5)    &none                                              &none   &none           &none  &none  &none  &none      &none
&none  &kp LS(LA(LC(LG(Q))))          &kp LS(LA(LC(LG(W))))          &kp LS(LA(LC(LG(E))))          &kp LS(LA(LC(LG(R))))          &mt LS(LG(T)) LG(T)  &none                                              &none   &kp LG(C)       &none  &none  &none  &kp LG(V)  &none
&none  &none                          &kp LS(LC(LA(LG(S))))          &kp LS(LA(LC(LG(D))))          &kp LS(LA(LC(LG(F))))          &none                &none  &none   &none  &none  &none  &none  &none   &none   &copypastefind  &none  &none  &none  &none      &none
&none  &none                          &none                          &none                          &none                          &none                &none  &none   &none  &none  &none  &none  &none   &none   &none           &none  &none  &none  &none      &none
&none  &none                          &none                          &none                          &none                                               &none  &trans  &none                &none  &trans  &trans                  &none  &none  &none  &none      &none
            >;
        };

        layer_symb {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans     &trans                &trans                 &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &kp PLUS   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp MINUS  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp EQUAL  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp UNDER  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans     &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans                  &trans  &trans  &trans          &trans     &trans                &trans                 &trans     &trans
            >;
        };

        layer_fn {
            bindings = <
&none  &none   &none   &none   &none    &none    &none                                            &none  &none  &none  &none  &none  &none  &none
&none  &kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &none                                            &none  &none  &none  &none  &none  &none  &none
&none  &kp F6  &kp F7  &kp F8  &kp F9   &kp F10  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none   &none   &none   &kp F11  &kp F12  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none   &none   &none   &none             &none  &none  &none                &none  &none  &none         &none  &none  &none  &none  &none
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                                            &trans                  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none
&none  &none         &none         &none         &none         &none         &bootloader                                                                      &bootloader             &none         &none         &none         &none         &none         &none
&none  &none         &none         &none         &none         &none         &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR  &none  &none  &none  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5  &none         &none         &none         &none         &none         &none
&none  &none         &none         &none         &none         &none         &none                   &none       &none  &none  &none  &none       &none       &none                   &none         &none         &none         &none         &none         &none
&none  &none         &none         &bl BL_INC    &bl BL_DEC                  &rgb_ug RGB_TOG         &bl BL_TOG  &none                &none       &bl BL_TOG  &rgb_ug RGB_TOG                       &bl BL_INC    &bl BL_DEC    &none         &none         &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        fn-layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
